apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-data
  namespace: logging
data:
  
  curl-script.sh: |
    #!/bin/sh
    
    #Wait for Kibana to be available & healthy
    function wait_for_kibana {
        echo "Testing connection to Kibana"
        until $(curl -k -X GET http://${KIBANA_URL}:${KIBANA_PORT}/); do sleep 5; done
        until [ "$(curl -k -X GET http://${KIBANA_URL}:${KIBANA_PORT}/ | wc -l)" == "0" ]
        do sleep 5
        done
    }
    
    #Import data view
    function import_data_view {
        echo "Importing data_view..."
        OUTPUT=$(curl -k -X POST http://${KIBANA_URL}:${KIBANA_PORT}/api/saved_objects/_import -H "kbn-xsrf: true" --form file=@/kibana/file.ndjson)
        SUCCESS=$(echo ${OUTPUT} | grep -o '"successCount":1' | wc -l)
        if [[ ${SUCCESS} == "1" ]]; then
          printf "\n########## Imported data view successfully! #############################\n"
        else
          printf "\n########## Failure while importing data view #############\n"
        fi
        echo ${OUTPUT}
    }
    #Import dashboards
    function import_dashboards {
        echo "Importing dashboards..."
        OUTPUT=$(curl -X POST http://${KIBANA_URL}:${KIBANA_PORT}/api/kibana/dashboards/import?exclude=index-pattern -H 'kbn-xsrf: true' -H 'Content-Type: application/json' -d @/kibana/file.json)
        SUCCESS=$(echo ${OUTPUT} | grep -o '"successCount":1' | wc -l)
        if [[ ${SUCCESS} == "1" ]]; then
          printf "\n########## Imported dashboards successfully! #############################\n"
        else
          printf "\n########## Failure while importing dashboards #############\n"
        fi
        echo ${OUTPUT}
    }
    wait_for_kibana
    import_data_view
    import_dashboards

  file.ndjson: |
{{ .Values.kibana.auto_load_dashboard.data_view_json | nindent 4 }}
  
  file.json: |
{{ .Values.kibana.auto_load_dashboard.dashboard_json | nindent 4 }}
