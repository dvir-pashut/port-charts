apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-data
  namespace: monitoring
data:
  
  curl-script.sh: |
    #!bin/sh
    echo "waiting for grafana to be ready"
    check=1
    while [ $check == 1 ]
    do
      check=0
      curl -i ${GRAFANA_URL}:${GRAFANA_PORT}/api/v1/provisioning/contact-points --user "${adminuser}:${adminpassword}" &> /dev/null  || {  echo "not ready yet" && check=1; } 
      sleep 5
    done
    echo "grafana is ready"
    sleep 1

    echo "creating new folder for the alerts"
    curl -X POST ${GRAFANA_URL}:${GRAFANA_PORT}/api/folders  -d @folder.json --user "${adminuser}:${adminpassword}"  -H "Content-Type: application/json"  &> /dev/null
    echo "folder created"

    sleep 1 

    echo "adding the alerts"
    for i in {1..3}
    do
    curl -X POST ${GRAFANA_URL}:${GRAFANA_PORT}/api/v1/provisioning/alert-rules  -d @alert$i.json --user "${adminuser}:${adminpassword}"  -H "Content-Type: application/json" &> /dev/null
    sleep 1
    done

    echo "alerts added"
    sleep 1

    echo "adding the contact point" 
    curl -X POST ${GRAFANA_URL}:${GRAFANA_PORT}/api/v1/provisioning/contact-points  -d @contacts.json --user "${adminuser}:${adminpassword}"  -H "Content-Type: application/json" &> /dev/null
    sleep 1
    echo "contact point added"

    echo "updating the policies"
    sleep 1
    curl -X PUT ${GRAFANA_URL}:${GRAFANA_PORT}/api/v1/provisioning/policies  --user "${adminuser}:${adminpassword}" -d @notification_channel.json -H "Content-Type: application/json"   &> /dev/null

    echo done 

    ##to get the stuff you made hardcoded use this routes
    ####curl ${GRAFANA_URL}:${GRAFANA_PORT}/api/v1/provisioning/alert-rules/<uid> --user "admin:password" 
    ###curl ${GRAFANA_URL}:${GRAFANA_PORT}/api/v1/provisioning/contact-points --user "admin:password"



  alert1.json: |
    {"id":1,"uid":"u2tTI01Vz","orgID":1,"folderUID":"VU7TI01Vz","ruleGroup":"me","title":"memory cpu ","condition":"C","data":[{"refId":"A","queryType":"","relativeTimeRange":{"from":600,"to":0},"datasourceUid":"PBFA97CFB590B2093","model":{"editorMode":"code","expr":"(sum by (node)(rate(node_cpu_seconds_total{mode!=\"idle\"}[2m]))*100)","hide":false,"intervalMs":1000,"legendFormat":"__auto","maxDataPoints":43200,"range":true,"refId":"A"}},{"refId":"B","queryType":"","relativeTimeRange":{"from":600,"to":0},"datasourceUid":"-100","model":{"conditions":[{"evaluator":{"params":[],"type":"gt"},"operator":{"type":"and"},"query":{"params":["B"]},"reducer":{"params":[],"type":"last"},"type":"query"}],"datasource":{"type":"__expr__","uid":"-100"},"expression":"A","hide":false,"intervalMs":1000,"maxDataPoints":43200,"reducer":"last","refId":"B","type":"reduce"}},{"refId":"C","queryType":"","relativeTimeRange":{"from":600,"to":0},"datasourceUid":"-100","model":{"conditions":[{"evaluator":{"params":[80],"type":"gt"},"operator":{"type":"and"},"query":{"params":["C"]},"reducer":{"params":[],"type":"last"},"type":"query"}],"datasource":{"type":"__expr__","uid":"-100"},"expression":"B","hide":false,"intervalMs":1000,"maxDataPoints":43200,"refId":"C","type":"threshold"}}],"updated":"2023-02-16T16:01:21Z","noDataState":"NoData","execErrState":"Error","for":"1m"}
  
  alert2.json: |
    {"id":2,"uid":"y-8AS014z","orgID":1,"folderUID":"VU7TI01Vz","ruleGroup":"me","title":"nodes cpu","condition":"C","data":[{"refId":"A","queryType":"","relativeTimeRange":{"from":600,"to":0},"datasourceUid":"PBFA97CFB590B2093","model":{"editorMode":"code","expr":"(sum by(instance) (irate(node_cpu_seconds_total{mode!=\"idle\"}[2m])) / on(instance) group_left sum by (instance)((irate(node_cpu_seconds_total[2m])))) * 100","hide":false,"intervalMs":1000,"legendFormat":"__auto","maxDataPoints":43200,"range":true,"refId":"A"}},{"refId":"B","queryType":"","relativeTimeRange":{"from":600,"to":0},"datasourceUid":"-100","model":{"conditions":[{"evaluator":{"params":[],"type":"gt"},"operator":{"type":"and"},"query":{"params":["B"]},"reducer":{"params":[],"type":"last"},"type":"query"}],"datasource":{"type":"__expr__","uid":"-100"},"expression":"A","hide":false,"intervalMs":1000,"maxDataPoints":43200,"reducer":"last","refId":"B","type":"reduce"}},{"refId":"C","queryType":"","relativeTimeRange":{"from":600,"to":0},"datasourceUid":"-100","model":{"conditions":[{"evaluator":{"params":[60],"type":"gt"},"operator":{"type":"and"},"query":{"params":["C"]},"reducer":{"params":[],"type":"last"},"type":"query"}],"datasource":{"type":"__expr__","uid":"-100"},"expression":"B","hide":false,"intervalMs":1000,"maxDataPoints":43200,"refId":"C","type":"threshold"}}],"updated":"2023-02-16T16:01:21Z","noDataState":"NoData","execErrState":"Error","for":"1m"}
  
  alert3.json: |
    {"id":3,"uid":"IjV-IAJ4z","orgID":1,"folderUID":"VU7TI01Vz","ruleGroup":"me","title":"ram usage","condition":"C","data":[{"refId":"A","queryType":"","relativeTimeRange":{"from":600,"to":0},"datasourceUid":"PBFA97CFB590B2093","model":{"editorMode":"code","expr":"node_memory_MemAvailable_bytes / 1024 / 1024","hide":false,"intervalMs":1000,"legendFormat":"__auto","maxDataPoints":43200,"range":true,"refId":"A"}},{"refId":"B","queryType":"","relativeTimeRange":{"from":600,"to":0},"datasourceUid":"-100","model":{"conditions":[{"evaluator":{"params":[],"type":"gt"},"operator":{"type":"and"},"query":{"params":["B"]},"reducer":{"params":[],"type":"last"},"type":"query"}],"datasource":{"type":"__expr__","uid":"-100"},"expression":"A","hide":false,"intervalMs":1000,"maxDataPoints":43200,"reducer":"last","refId":"B","type":"reduce"}},{"refId":"C","queryType":"","relativeTimeRange":{"from":600,"to":0},"datasourceUid":"-100","model":{"conditions":[{"evaluator":{"params":[5000],"type":"gt"},"operator":{"type":"and"},"query":{"params":["C"]},"reducer":{"params":[],"type":"last"},"type":"query"}],"datasource":{"type":"__expr__","uid":"-100"},"expression":"B","hide":false,"intervalMs":1000,"maxDataPoints":43200,"refId":"C","type":"threshold"}}],"updated":"2023-02-16T16:01:21Z","noDataState":"NoData","execErrState":"Error","for":"1m"}

####you can add as meny as you like

  folder.json: |
    {"uid": "VU7TI01Vz","title": "alerts"}
  
  contacts.json: |
    {"uid":"jskMN0JVz","name":"grafana-notes","type":"slack","settings":{"url":${slack_webhook},"username":"grafana"},"disableResolveMessage":false}

  notification_channel.json: |
    {"receiver":"grafana-notes","group_by":["grafana_folder","alertname"]}
    